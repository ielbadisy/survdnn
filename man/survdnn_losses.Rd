% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/losses.R
\name{cox_loss}
\alias{cox_loss}
\alias{cox_l2_loss}
\alias{rank_loss}
\alias{aft_loss}
\alias{combo_loss}
\title{Loss Functions for survdnn Models}
\usage{
cox_loss(pred, true)

cox_l2_loss(pred, true, lambda = 1e-04)

rank_loss(pred, true)

aft_loss(pred, true)

combo_loss(pred, true)
}
\arguments{
\item{pred}{A tensor of predicted values from the neural network (typically of shape `[n, 1]`).}

\item{true}{A tensor with two columns: observed time and event indicator.}

\item{lambda}{Regularization strength (for `cox_l2_loss`).}
}
\value{
A scalar torch tensor representing the loss.
}
\description{
These functions define various loss functions used to train `survdnn` deep learning survival models.
}
\examples{
library(torch)
library(survival)

# Simulated survival data
set.seed(123)
n <- 100
toy_data <- data.frame(
  x1 = rnorm(n),
  x2 = rbinom(n, 1, 0.5),
  time = rexp(n, 0.1),
  status = rbinom(n, 1, 0.7)
)

# Cox loss
mod_cox <- survdnn(Surv(time, status) ~ x1 + x2,
                   data = toy_data,
                   .loss_fn = cox_loss,
                   epochs = 100,
                   verbose = TRUE)
plot(mod_cox$loss_history, type = "l", main = "cox_loss")

# Cox + L2 penalty
mod_cox_l2 <- survdnn(Surv(time, status) ~ x1 + x2,
                   data = toy_data,
                   .loss_fn = cox_l2_loss,
                   epochs = 100,
                   verbose = TRUE)
plot(mod_cox_l2$loss_history, type = "l", main = "cox_l2_loss")

# AFT loss
mod_aft <- survdnn(Surv(time, status) ~ x1 + x2,
                   data = toy_data,
                   .loss_fn = aft_loss,
                   epochs = 100,
                   verbose = TRUE)
plot(mod_aft$loss_history, type = "l", main = "aft_loss")

# Custom loss
combo_loss <- function(pred, true) {
  time <- true[, 1]
  torch_mean((pred - log(time + 1))^2) + 0.01 * torch_mean(pred)
}

mod_combo <- survdnn(Surv(time, status) ~ x1 + x2,
                   data = toy_data,
                   .loss_fn = combo_loss,
                   epochs = 100,
                   verbose = TRUE)
plot(mod_combo$loss_history, type = "l", main = "combo_loss")
}
